//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class FsmShellWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(FsmShell), typeof(System.Object));
		L.RegFunction("RegisterBeginEvent", RegisterBeginEvent);
		L.RegFunction("RegisterEndEvent", RegisterEndEvent);
		L.RegFunction("UnRegisterAllUpdateEvent", UnRegisterAllUpdateEvent);
		L.RegFunction("RegisterUpdateEvent", RegisterUpdateEvent);
		L.RegFunction("Begin", Begin);
		L.RegFunction("Update", Update);
		L.RegFunction("End", End);
		L.RegFunction("New", _CreateFsmShell);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateFsmShell(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				FsmShell obj = new FsmShell();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: FsmShell.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RegisterBeginEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FsmShell obj = (FsmShell)ToLua.CheckObject(L, 1, typeof(FsmShell));
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.RegisterBeginEvent(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RegisterEndEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FsmShell obj = (FsmShell)ToLua.CheckObject(L, 1, typeof(FsmShell));
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.RegisterEndEvent(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnRegisterAllUpdateEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FsmShell obj = (FsmShell)ToLua.CheckObject(L, 1, typeof(FsmShell));
			obj.UnRegisterAllUpdateEvent();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RegisterUpdateEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FsmShell obj = (FsmShell)ToLua.CheckObject(L, 1, typeof(FsmShell));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.RegisterUpdateEvent(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Begin(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FsmShell obj = (FsmShell)ToLua.CheckObject(L, 1, typeof(FsmShell));
			obj.Begin();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Update(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FsmShell obj = (FsmShell)ToLua.CheckObject(L, 1, typeof(FsmShell));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.Update(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int End(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FsmShell obj = (FsmShell)ToLua.CheckObject(L, 1, typeof(FsmShell));
			obj.End();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

