//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class FsmMgrWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(FsmMgr), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("AddFsmShell", AddFsmShell);
		L.RegFunction("ChangeShell", ChangeShell);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddFsmShell(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FsmMgr obj = (FsmMgr)ToLua.CheckObject(L, 1, typeof(FsmMgr));
			string arg0 = ToLua.CheckString(L, 2);
			FsmShell arg1 = (FsmShell)ToLua.CheckObject(L, 3, typeof(FsmShell));
			obj.AddFsmShell(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ChangeShell(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FsmMgr obj = (FsmMgr)ToLua.CheckObject(L, 1, typeof(FsmMgr));
			string arg0 = ToLua.CheckString(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.ChangeShell(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

